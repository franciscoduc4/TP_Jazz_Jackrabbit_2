@startuml Server Threads Classes

class AcceptorThread {
    - std::shared_ptr<Socket> serverSocket
    - QueueMonitor queueMonitor
    - GameMonitor gameMonitor
    - std::vector<std::unique_ptr<Player>> players
    - bool isAlive
    + AcceptorThread(const std::string& servname)
    + run() : void
    + stop() : void
    - removeDeadPlayers() : void
    - removeAllPlayers() : void
}

class GameLoopThread {
    - double frameRate
    - bool keepRunning
    - size_t commandsToProcess
    - std::shared_ptr<Queue<std::unique_ptr<CommandDTO>>> recvQueue
    - QueueMonitor queueMonitor
    - GameMap gameMap
    - uint8_t gameId
    + GameLoopThread()
    + run() : void
    + stop() : void
    + isRunning() : bool
    - processCommands(double deltaTime) : void
}

class ReceiverThread {
    - uint8_t playerId
    - Serializer serializer
    - Deserializer deserializer
    - std::atomic<bool>& keepPlaying
    - std::atomic<bool>& inGame
    - GameMonitor& gameMonitor
    - std::shared_ptr<Queue<std::unique_ptr<CommandDTO>>> recvQueue
    - std::shared_ptr<Queue<std::unique_ptr<DTO>>> sendQueue
    + ReceiverThread()
    + run() : void
    - runLobby() : void
    - runGame() : void
}

class SenderThread {
    - std::shared_ptr<Socket> socket
    - std::atomic<bool>& keepPlaying
    - std::atomic<bool>& inGame
    - uint8_t playerId
    - std::shared_ptr<Queue<std::unique_ptr<DTO>>> sendQueue
    - Serializer serializer
    - Deserializer deserializer
    + SenderThread()
    + run() : void
    - runLobby() : void
}

class Server {
    - std::string servname
    + Server(const std::string& servname)
    + run() : void
}

AcceptorThread --> Player
AcceptorThread --> Socket
AcceptorThread --> QueueMonitor
AcceptorThread --> GameMonitor
AcceptorThread --> Server
GameLoopThread --> CommandDTO
GameLoopThread --> QueueMonitor
GameLoopThread --> GameMap
ReceiverThread --> CommandDTO
ReceiverThread --> DTO
ReceiverThread --> Socket
ReceiverThread --> GameMonitor
ReceiverThread --> Serializer
ReceiverThread --> Deserializer
SenderThread --> DTO
SenderThread --> Socket
SenderThread --> Serializer
SenderThread --> Deserializer
Server --> AcceptorThread

@enduml