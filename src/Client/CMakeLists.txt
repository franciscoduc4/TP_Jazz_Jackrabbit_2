set(SDL2PP_WITH_IMAGE ON)
set(SDL2PP_WITH_MIXER ON)
set(SDL2PP_WITH_TTF ON)

# List of source files for gameview
set(GAMEVIEW_SOURCES
    SDL/enemy.cpp
    SDL/enemy.h
    SDL/enemyweapon.cpp
    SDL/enemyweapon.h
    SDL/gamescreen.cpp
    SDL/gamescreen.h
    SDL/level.cpp
    SDL/level.h
    SDL/main.cpp
    SDL/player.cpp
    SDL/player.h
    SDL/points.cpp
    SDL/points.h
    SDL/projectile.cpp
    SDL/projectile.h
)

add_library(gameview ${GAMEVIEW_SOURCES})

target_include_directories(gameview PRIVATE ${PROJECT_SOURCE_DIR}/src/Client/Lobby)
# target_include_directories(gameview PUBLIC ${PROJECT_SOURCE_DIR}/extlibs/libsdl2pp)
target_include_directories(gameview PRIVATE ${PROJECT_SOURCE_DIR}/src/Client)
target_link_libraries(gameview PUBLIC SDL2pp)
target_compile_definitions(gameview PUBLIC ASSETS_PATH="${VARDIR}/assets/")

# Qt UI components
include_directories(${PROJECT_SOURCE_DIR}/src/Client/Lobby)
qt5_wrap_ui(UIS_HEADERS
    ${PROJECT_SOURCE_DIR}/src/Client/Lobby/characterselection.ui
    ${PROJECT_SOURCE_DIR}/src/Client/Lobby/creategame.ui
    ${PROJECT_SOURCE_DIR}/src/Client/Lobby/gamelist.ui
    ${PROJECT_SOURCE_DIR}/src/Client/Lobby/lobby.ui
    ${PROJECT_SOURCE_DIR}/src/Client/Lobby/name_screen.ui
    ${PROJECT_SOURCE_DIR}/src/Client/Lobby/sceneselection.ui
    ${PROJECT_SOURCE_DIR}/src/Client/Lobby/scenespriteswidget.ui
    ${PROJECT_SOURCE_DIR}/src/Client/Lobby/waitingroom.ui
    ${PROJECT_SOURCE_DIR}/src/Client/Lobby/welcome.ui
)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

# Adding directory with the autogenerated headers as include directory
include_directories(${PROJECT_BINARY_DIR}/src)

file(GLOB_RECURSE CLIENT_SOURCES
    *.cpp
    *.h
    Lobby/*.cpp
    Lobby/*.h
    Protocol/*.cpp
    Protocol/*.h
    main.cpp
)

add_executable(jazzclient ${CLIENT_SOURCES} ${UIS_HEADERS})
target_link_libraries(jazzclient PUBLIC Qt5::Widgets Qt5::Core gameview)
target_include_directories(jazzclient PRIVATE ${PROJECT_SOURCE_DIR}/src)
target_include_directories(jazzclient PUBLIC ${PROJECT_SOURCE_DIR}/src/Client)